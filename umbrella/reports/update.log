ðŸ”„ Actualizando submÃ³dulos al Ãºltimo tag semÃ¡ntico v-* y ejecutando Terraform...
ðŸ“¦ Procesando compute-repo...
âœ… Ãšltimo tag: v-0.2
HEAD is now at 4b89736 feat(tf): Implementar triggers para la simulaciÃ³n de drift
ðŸš€ Ejecutando Terraform en compute-repo...
[0m[1mInitializing the backend...[0m
[0m[1mInitializing provider plugins...[0m
- Reusing previous version of hashicorp/null from the dependency lock file
- Using previously-installed hashicorp/null v3.2.4

[0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
[0m[32m
You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.[0m
[0m[1mvar.network_name[0m
  [1mEnter a value:[0m [0m
[0m[1mnull_resource.server-1: Refreshing state... [id=2990084846609913504][0m

[0m[1m[32mNo changes.[0m[1m Your infrastructure matches the configuration.[0m

[0mTerraform has compared your real infrastructure against your configuration
and found no differences, so no changes are needed.
[0m[1m[32m
Apply complete! Resources: 0 added, 0 changed, 0 destroyed.
[0m[0m[1m[32m
Outputs:

[0mserver_name_out = "server-1-us-east"
âœ… Ãšltimo tag: v-0.2
HEAD is now at 1f20aac feat(tf): Implementar triggers para la simulaciÃ³n de drift
ðŸš€ Ejecutando Terraform en network-repo...
[0m[1mInitializing the backend...[0m
[0m[1mInitializing provider plugins...[0m
- Reusing previous version of hashicorp/null from the dependency lock file
- Using previously-installed hashicorp/null v3.2.4

[0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
[0m[32m
You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.[0m
[0m[1mnull_resource.network-1: Refreshing state... [id=1934026228082682240][0m

[0m[1m[32mNo changes.[0m[1m Your infrastructure matches the configuration.[0m

[0mTerraform has compared your real infrastructure against your configuration
and found no differences, so no changes are needed.
[0m[1m[32m
Apply complete! Resources: 0 added, 0 changed, 0 destroyed.
[0m[0m[1m[32m
Outputs:

[0mnetwork_name_out = "network-1-us-east"
âœ… Ãšltimo tag: v-0.2
HEAD is now at 6e3e057 feat(tf): Implementar triggers para la simulaciÃ³n de drift
ðŸš€ Ejecutando Terraform en storage-repo...
[0m[1mInitializing the backend...[0m
[0m[1mInitializing provider plugins...[0m
- Reusing previous version of hashicorp/null from the dependency lock file
- Using previously-installed hashicorp/null v3.2.4

[0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
[0m[32m
You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.[0m
[0m[1mvar.network_name[0m
  [1mEnter a value:[0m [0m
[0m[1mvar.server_name[0m
  [1mEnter a value:[0m [0m
[0m[1mnull_resource.db-1: Refreshing state... [id=4954654062378478421][0m

[0m[1m[32mNo changes.[0m[1m Your infrastructure matches the configuration.[0m

[0mTerraform has compared your real infrastructure against your configuration
and found no differences, so no changes are needed.
[0m[1m[32m
Apply complete! Resources: 0 added, 0 changed, 0 destroyed.
[0m[0m[1m[32m
Outputs:

[0mdb_name_out = "db-1-us-east"
storage_path = "/db/db-1-us-east"
From https://github.com/grupo10-CC3S2/compute-repo
   4b89736..6d76686  master     -> origin/master
 * [new tag]         v-0.3      -> v-0.3
âœ… Ãšltimo tag: v-0.3
Previous HEAD position was 4b89736 feat(tf): Implementar triggers para la simulaciÃ³n de drift
HEAD is now at 6d76686 feat(tf): AÃ±adir network_name por defecto
ðŸš€ Ejecutando Terraform en compute-repo...
[0m[1mInitializing the backend...[0m
[0m[1mInitializing provider plugins...[0m
- Finding latest version of hashicorp/null...
- Installing hashicorp/null v3.2.4...
- Installed hashicorp/null v3.2.4 (signed by HashiCorp)
Terraform has created a lock file [1m.terraform.lock.hcl[0m to record the provider
selections it made above. Include this file in your version control repository
so that Terraform can guarantee to make the same selections by default when
you run "terraform init" in the future.[0m

[0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
[0m[32m
You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.[0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # null_resource.server-1[0m will be created
[0m  [32m+[0m[0m resource "null_resource" "server-1" {
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m triggers = {
          [32m+[0m[0m "version" = "v1"
        }
    }

[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m server_name_out = "server-1-us-east"
[0m[1mnull_resource.server-1: Creating...[0m[0m
[0m[1mnull_resource.server-1: Provisioning with 'local-exec'...[0m[0m
[0m[1mnull_resource.server-1 (local-exec):[0m [0mExecuting: ["cmd" "/C" "echo 'Creando server server-1-us-east con network net-1'"]
[0m[1mnull_resource.server-1 (local-exec):[0m [0m'Creando server server-1-us-east con network net-1'
[0m[1mnull_resource.server-1: Creation complete after 0s [id=5184933949592006253][0m
[0m[1m[32m
Apply complete! Resources: 1 added, 0 changed, 0 destroyed.
[0m[0m[1m[32m
Outputs:

[0mserver_name_out = "server-1-us-east"
From https://github.com/grupo10-CC3S2/network-repo
 * [new tag]         v-0.3      -> v-0.3
âœ… Ãšltimo tag: v-0.3
Previous HEAD position was 1f20aac feat(tf): Implementar triggers para la simulaciÃ³n de drift
HEAD is now at 04ef76a feat(tf): AÃ±adir  valor por defecto a network_name en variables.tf
ðŸš€ Ejecutando Terraform en network-repo...
[0m[1mInitializing the backend...[0m
[0m[1mInitializing provider plugins...[0m
- Finding latest version of hashicorp/null...
- Installing hashicorp/null v3.2.4...
- Installed hashicorp/null v3.2.4 (signed by HashiCorp)
Terraform has created a lock file [1m.terraform.lock.hcl[0m to record the provider
selections it made above. Include this file in your version control repository
so that Terraform can guarantee to make the same selections by default when
you run "terraform init" in the future.[0m

[0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
[0m[32m
You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.[0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # null_resource.network-1[0m will be created
[0m  [32m+[0m[0m resource "null_resource" "network-1" {
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m triggers = {
          [32m+[0m[0m "version" = "v1"
        }
    }

[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m network_name_out = "net-1"
[0m[1mnull_resource.network-1: Creating...[0m[0m
[0m[1mnull_resource.network-1: Provisioning with 'local-exec'...[0m[0m
[0m[1mnull_resource.network-1 (local-exec):[0m [0mExecuting: ["cmd" "/C" "echo 'Creando network net-1 con puerto 8080'"]
[0m[1mnull_resource.network-1 (local-exec):[0m [0m'Creando network net-1 con puerto 8080'
[0m[1mnull_resource.network-1: Creation complete after 0s [id=8291395976337921537][0m
[0m[1m[32m
Apply complete! Resources: 1 added, 0 changed, 0 destroyed.
[0m[0m[1m[32m
Outputs:

[0mnetwork_name_out = "net-1"
From https://github.com/grupo10-CC3S2/storage-repo
   6e3e057..afe70bf  master     -> origin/master
 * [new tag]         v-0.3      -> v-0.3
âœ… Ãšltimo tag: v-0.3
Previous HEAD position was 6e3e057 feat(tf): Implementar triggers para la simulaciÃ³n de drift
HEAD is now at afe70bf feat(tf): AÃ±adir  valor por defecto a network_name y server_name en variables.tf
ðŸš€ Ejecutando Terraform en storage-repo...
[0m[1mInitializing the backend...[0m
[0m[1mInitializing provider plugins...[0m
- Finding latest version of hashicorp/null...
- Installing hashicorp/null v3.2.4...
- Installed hashicorp/null v3.2.4 (signed by HashiCorp)
Terraform has created a lock file [1m.terraform.lock.hcl[0m to record the provider
selections it made above. Include this file in your version control repository
so that Terraform can guarantee to make the same selections by default when
you run "terraform init" in the future.[0m

[0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
[0m[32m
You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.[0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # null_resource.db-1[0m will be created
[0m  [32m+[0m[0m resource "null_resource" "db-1" {
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m triggers = {
          [32m+[0m[0m "version" = "v1"
        }
    }

[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m db_name_out  = "db-1-us-east"
  [32m+[0m[0m storage_path = "/db/db-1-us-east"
[0m[1mnull_resource.db-1: Creating...[0m[0m
[0m[1mnull_resource.db-1: Provisioning with 'local-exec'...[0m[0m
[0m[1mnull_resource.db-1 (local-exec):[0m [0mExecuting: ["cmd" "/C" "echo 'Creando database db-1-us-east con server server-1-us-east con network net-1'"]
[0m[1mnull_resource.db-1 (local-exec):[0m [0m'Creando database db-1-us-east con server server-1-us-east con network net-1'
[0m[1mnull_resource.db-1: Creation complete after 0s [id=3713261738230379123][0m
[0m[1m[32m
Apply complete! Resources: 1 added, 0 changed, 0 destroyed.
[0m[0m[1m[32m
Outputs:

[0mdb_name_out = "db-1-us-east"
storage_path = "/db/db-1-us-east"
